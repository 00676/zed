// This file is generated by extract_syntax_types.ts
// Do not edit this file directly
// It is generated from the highlight.scm files in the zed crate

// To regenerate this file manually:
//     'npm run extract-syntax-types' from ./styles

export type SyntaxHighlightStyle = {
    color: string
    fade_out?: number
    italic?: boolean
    underline?: boolean
    weight?: string
}

export type Syntax = Record<SyntaxProperty, SyntaxHighlightStyle>
export type SyntaxOverride = Partial<Syntax>

export type SyntaxProperty =
    /** Default text color */
    | "primary"

    /** elixir */
    | "__attribute__"
    /** elixir */
    | "__name__"
    /** elixir */
    | "_sigil_name"
    /** css, heex, lua */
    | "attribute"
    /** javascript, lua, tsx, typescript, yaml */
    | "boolean"
    /** elixir */
    | "comment.doc"
    /** elixir */
    | "comment.unused"
    /** bash, c, cpp, css, elixir, elm, erb, ... */
    | "comment"
    /** elixir, go, javascript, lua, php, python, racket, ... */
    | "constant.builtin"
    /** bash, c, cpp, elixir, elm, glsl, heex, ... */
    | "constant"
    /** glsl */
    | "delimiter"
    /** bash, elixir, javascript, python, ruby, tsx, typescript */
    | "embedded"
    /** markdown */
    | "emphasis.strong"
    /** markdown */
    | "emphasis"
    /** go, python, racket, ruby, scheme */
    | "escape"
    /** lua */
    | "field"
    /** lua, php, python */
    | "function.builtin"
    /** elm, lua, rust */
    | "function.definition"
    /** ruby */
    | "function.method.builtin"
    /** go, javascript, php, python, ruby, rust, tsx, ... */
    | "function.method"
    /** rust */
    | "function.special.definition"
    /** c, cpp, glsl, rust */
    | "function.special"
    /** bash, c, cpp, css, elixir, elm, glsl, ... */
    | "function"
    /** elm */
    | "identifier"
    /** glsl */
    | "keyword.function"
    /** bash, c, cpp, css, elixir, elm, erb, ... */
    | "keyword"
    /** c, cpp, glsl */
    | "label"
    /** markdown */
    | "link_text"
    /** markdown */
    | "link_uri"
    /** lua, php, tsx, typescript */
    | "method.constructor"
    /** lua */
    | "method"
    /** heex */
    | "module"
    /** svelte */
    | "none"
    /** bash, c, cpp, css, elixir, glsl, go, ... */
    | "number"
    /** bash, c, cpp, css, elixir, elm, glsl, ... */
    | "operator"
    /** lua */
    | "parameter"
    /** lua */
    | "preproc"
    /** bash, c, cpp, css, glsl, go, html, ... */
    | "property"
    /** c, cpp, elixir, elm, heex, html, javascript, ... */
    | "punctuation.bracket"
    /** c, cpp, css, elixir, elm, heex, javascript, ... */
    | "punctuation.delimiter"
    /** markdown */
    | "punctuation.list_marker"
    /** elixir, javascript, python, ruby, tsx, typescript, yaml */
    | "punctuation.special"
    /** elixir */
    | "punctuation"
    /** glsl */
    | "storageclass"
    /** elixir, elm, yaml */
    | "string.escape"
    /** elixir, javascript, racket, ruby, tsx, typescript */
    | "string.regex"
    /** elixir, ruby */
    | "string.special.symbol"
    /** css, elixir, toml */
    | "string.special"
    /** bash, c, cpp, css, elixir, elm, glsl, ... */
    | "string"
    /** svelte */
    | "tag.delimiter"
    /** css, heex, php, svelte */
    | "tag"
    /** markdown */
    | "text.literal"
    /** markdown */
    | "title"
    /** javascript, php, rust, tsx, typescript */
    | "type.builtin"
    /** glsl */
    | "type.qualifier"
    /** c, cpp, css, elixir, elm, glsl, go, ... */
    | "type"
    /** glsl, php */
    | "variable.builtin"
    /** cpp, css, javascript, lua, racket, ruby, rust, ... */
    | "variable.special"
    /** c, cpp, elm, glsl, go, javascript, lua, ... */
    | "variable"

export const allSyntaxKeys: SyntaxProperty[] = [
    "__attribute__",
    "__name__",
    "_sigil_name",
    "attribute",
    "boolean",
    "comment.doc",
    "comment.unused",
    "comment",
    "constant.builtin",
    "constant",
    "delimiter",
    "embedded",
    "emphasis.strong",
    "emphasis",
    "escape",
    "field",
    "function.builtin",
    "function.definition",
    "function.method.builtin",
    "function.method",
    "function.special.definition",
    "function.special",
    "function",
    "identifier",
    "keyword.function",
    "keyword",
    "label",
    "link_text",
    "link_uri",
    "method.constructor",
    "method",
    "module",
    "none",
    "number",
    "operator",
    "parameter",
    "preproc",
    "property",
    "punctuation.bracket",
    "punctuation.delimiter",
    "punctuation.list_marker",
    "punctuation.special",
    "punctuation",
    "storageclass",
    "string.escape",
    "string.regex",
    "string.special.symbol",
    "string.special",
    "string",
    "tag.delimiter",
    "tag",
    "text.literal",
    "title",
    "type.builtin",
    "type.qualifier",
    "type",
    "variable.builtin",
    "variable.special",
    "variable",
]
